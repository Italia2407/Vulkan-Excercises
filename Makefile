# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_x64)
  x_volk_config = debug_x64
  x_vulkan_headers_config = debug_x64
  x_stb_config = debug_x64
  x_glfw_config = debug_x64
  x_vma_config = debug_x64
  x_glm_config = debug_x64
  exercise1_config = debug_x64
  exercise2_config = debug_x64
  exercise2_shaders_config = debug_x64
  exercise3_config = debug_x64
  exercise3_shaders_config = debug_x64
  exercise4_config = debug_x64
  exercise4_shaders_config = debug_x64
  labutils_config = debug_x64

else ifeq ($(config),release_x64)
  x_volk_config = release_x64
  x_vulkan_headers_config = release_x64
  x_stb_config = release_x64
  x_glfw_config = release_x64
  x_vma_config = release_x64
  x_glm_config = release_x64
  exercise1_config = release_x64
  exercise2_config = release_x64
  exercise2_shaders_config = release_x64
  exercise3_config = release_x64
  exercise3_shaders_config = release_x64
  exercise4_config = release_x64
  exercise4_shaders_config = release_x64
  labutils_config = release_x64

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := x-volk x-vulkan-headers x-stb x-glfw x-vma x-glm exercise1 exercise2 exercise2-shaders exercise3 exercise3-shaders exercise4 exercise4-shaders labutils

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

x-volk:
ifneq (,$(x_volk_config))
	@echo "==== Building x-volk ($(x_volk_config)) ===="
	@${MAKE} --no-print-directory -C third_party -f x-volk.make config=$(x_volk_config)
endif

x-vulkan-headers:
ifneq (,$(x_vulkan_headers_config))
	@echo "==== Building x-vulkan-headers ($(x_vulkan_headers_config)) ===="
	@${MAKE} --no-print-directory -C third_party -f x-vulkan-headers.make config=$(x_vulkan_headers_config)
endif

x-stb:
ifneq (,$(x_stb_config))
	@echo "==== Building x-stb ($(x_stb_config)) ===="
	@${MAKE} --no-print-directory -C third_party -f x-stb.make config=$(x_stb_config)
endif

x-glfw:
ifneq (,$(x_glfw_config))
	@echo "==== Building x-glfw ($(x_glfw_config)) ===="
	@${MAKE} --no-print-directory -C third_party -f x-glfw.make config=$(x_glfw_config)
endif

x-vma:
ifneq (,$(x_vma_config))
	@echo "==== Building x-vma ($(x_vma_config)) ===="
	@${MAKE} --no-print-directory -C third_party -f x-vma.make config=$(x_vma_config)
endif

x-glm:
ifneq (,$(x_glm_config))
	@echo "==== Building x-glm ($(x_glm_config)) ===="
	@${MAKE} --no-print-directory -C third_party -f x-glm.make config=$(x_glm_config)
endif

exercise1: labutils x-volk
ifneq (,$(exercise1_config))
	@echo "==== Building exercise1 ($(exercise1_config)) ===="
	@${MAKE} --no-print-directory -C exercise1 -f Makefile config=$(exercise1_config)
endif

exercise2: labutils x-volk x-stb exercise2-shaders
ifneq (,$(exercise2_config))
	@echo "==== Building exercise2 ($(exercise2_config)) ===="
	@${MAKE} --no-print-directory -C exercise2 -f Makefile config=$(exercise2_config)
endif

exercise2-shaders:
ifneq (,$(exercise2_shaders_config))
	@echo "==== Building exercise2-shaders ($(exercise2_shaders_config)) ===="
	@${MAKE} --no-print-directory -C exercise2/shaders -f Makefile config=$(exercise2_shaders_config)
endif

exercise3: labutils x-volk x-stb x-glfw exercise3-shaders
ifneq (,$(exercise3_config))
	@echo "==== Building exercise3 ($(exercise3_config)) ===="
	@${MAKE} --no-print-directory -C exercise3 -f Makefile config=$(exercise3_config)
endif

exercise3-shaders:
ifneq (,$(exercise3_shaders_config))
	@echo "==== Building exercise3-shaders ($(exercise3_shaders_config)) ===="
	@${MAKE} --no-print-directory -C exercise3/shaders -f Makefile config=$(exercise3_shaders_config)
endif

exercise4: labutils x-volk x-stb x-glfw x-vma exercise4-shaders x-glm
ifneq (,$(exercise4_config))
	@echo "==== Building exercise4 ($(exercise4_config)) ===="
	@${MAKE} --no-print-directory -C exercise4 -f Makefile config=$(exercise4_config)
endif

exercise4-shaders:
ifneq (,$(exercise4_shaders_config))
	@echo "==== Building exercise4-shaders ($(exercise4_shaders_config)) ===="
	@${MAKE} --no-print-directory -C exercise4/shaders -f Makefile config=$(exercise4_shaders_config)
endif

labutils:
ifneq (,$(labutils_config))
	@echo "==== Building labutils ($(labutils_config)) ===="
	@${MAKE} --no-print-directory -C labutils -f Makefile config=$(labutils_config)
endif

clean:
	@${MAKE} --no-print-directory -C third_party -f x-volk.make clean
	@${MAKE} --no-print-directory -C third_party -f x-vulkan-headers.make clean
	@${MAKE} --no-print-directory -C third_party -f x-stb.make clean
	@${MAKE} --no-print-directory -C third_party -f x-glfw.make clean
	@${MAKE} --no-print-directory -C third_party -f x-vma.make clean
	@${MAKE} --no-print-directory -C third_party -f x-glm.make clean
	@${MAKE} --no-print-directory -C exercise1 -f Makefile clean
	@${MAKE} --no-print-directory -C exercise2 -f Makefile clean
	@${MAKE} --no-print-directory -C exercise2/shaders -f Makefile clean
	@${MAKE} --no-print-directory -C exercise3 -f Makefile clean
	@${MAKE} --no-print-directory -C exercise3/shaders -f Makefile clean
	@${MAKE} --no-print-directory -C exercise4 -f Makefile clean
	@${MAKE} --no-print-directory -C exercise4/shaders -f Makefile clean
	@${MAKE} --no-print-directory -C labutils -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_x64"
	@echo "  release_x64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   x-volk"
	@echo "   x-vulkan-headers"
	@echo "   x-stb"
	@echo "   x-glfw"
	@echo "   x-vma"
	@echo "   x-glm"
	@echo "   exercise1"
	@echo "   exercise2"
	@echo "   exercise2-shaders"
	@echo "   exercise3"
	@echo "   exercise3-shaders"
	@echo "   exercise4"
	@echo "   exercise4-shaders"
	@echo "   labutils"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"