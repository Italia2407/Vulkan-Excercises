# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

# File sets
# #############################################

CUSTOM :=

CUSTOM += ../../assets/exercise4/shaders/shader2d.frag.spv
CUSTOM += ../../assets/exercise4/shaders/shader2d.vert.spv
CUSTOM += ../../assets/exercise4/shaders/shader3d.frag.spv
CUSTOM += ../../assets/exercise4/shaders/shader3d.vert.spv
CUSTOM += ../../assets/exercise4/shaders/shaderTex.frag.spv
CUSTOM += ../../assets/exercise4/shaders/shaderTex.vert.spv
CUSTOM += ../../assets/exercise4/shaders/triangle.frag.spv
CUSTOM += ../../assets/exercise4/shaders/triangle.vert.spv
CUSTOM += ../../assets/exercise4/shaders/shaderTexAlpha.frag.spv

# Rules
# #############################################

all: $(TARGETDIR) $(TARGET) $(CUSTOM)
	@:

$(TARGET): $(CUSTOM) 
	$(PREBUILDCMDS)
	$(PRELINKCMDS)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

clean:
	@echo Cleaning exercise4-shaders


# File Rules
# #############################################

../../assets/exercise4/shaders/shader2d.frag.spv: shader2d.frag
	@echo "GLSLC: [FRAG] 'shader2d.frag'"
	$(SILENT) mkdir -p "../../assets/exercise4/shaders"
	$(SILENT) "../../third_party/shaderc/linux-x86_64/glslc" -O  -o "../../assets/exercise4/shaders/shader2d.frag.spv" "shader2d.frag"
../../assets/exercise4/shaders/shader2d.vert.spv: shader2d.vert
	@echo "GLSLC: [VERT] 'shader2d.vert'"
	$(SILENT) mkdir -p "../../assets/exercise4/shaders"
	$(SILENT) "../../third_party/shaderc/linux-x86_64/glslc" -O  -o "../../assets/exercise4/shaders/shader2d.vert.spv" "shader2d.vert"
../../assets/exercise4/shaders/shader3d.frag.spv: shader3d.frag
	@echo "GLSLC: [FRAG] 'shader3d.frag'"
	$(SILENT) mkdir -p "../../assets/exercise4/shaders"
	$(SILENT) "../../third_party/shaderc/linux-x86_64/glslc" -O  -o "../../assets/exercise4/shaders/shader3d.frag.spv" "shader3d.frag"
../../assets/exercise4/shaders/shader3d.vert.spv: shader3d.vert
	@echo "GLSLC: [VERT] 'shader3d.vert'"
	$(SILENT) mkdir -p "../../assets/exercise4/shaders"
	$(SILENT) "../../third_party/shaderc/linux-x86_64/glslc" -O  -o "../../assets/exercise4/shaders/shader3d.vert.spv" "shader3d.vert"
../../assets/exercise4/shaders/shaderTex.frag.spv: shaderTex.frag
	@echo "GLSLC: [FRAG] 'shaderTex.frag'"
	$(SILENT) mkdir -p "../../assets/exercise4/shaders"
	$(SILENT) "../../third_party/shaderc/linux-x86_64/glslc" -O  -o "../../assets/exercise4/shaders/shaderTex.frag.spv" "shaderTex.frag"
../../assets/exercise4/shaders/shaderTex.vert.spv: shaderTex.vert
	@echo "GLSLC: [VERT] 'shaderTex.vert'"
	$(SILENT) mkdir -p "../../assets/exercise4/shaders"
	$(SILENT) "../../third_party/shaderc/linux-x86_64/glslc" -O  -o "../../assets/exercise4/shaders/shaderTex.vert.spv" "shaderTex.vert"
../../assets/exercise4/shaders/triangle.frag.spv: triangle.frag
	@echo "GLSLC: [FRAG] 'triangle.frag'"
	$(SILENT) mkdir -p "../../assets/exercise4/shaders"
	$(SILENT) "../../third_party/shaderc/linux-x86_64/glslc" -O  -o "../../assets/exercise4/shaders/triangle.frag.spv" "triangle.frag"
../../assets/exercise4/shaders/triangle.vert.spv: triangle.vert
	@echo "GLSLC: [VERT] 'triangle.vert'"
	$(SILENT) mkdir -p "../../assets/exercise4/shaders"
	$(SILENT) "../../third_party/shaderc/linux-x86_64/glslc" -O  -o "../../assets/exercise4/shaders/triangle.vert.spv" "triangle.vert"
../../assets/exercise4/shaders/shaderTexAlpha.frag.spv: shaderTexAlpha.frag
	@echo "GLSLC: [FRAG] 'shaderTexAlpha.frag'"
	$(SILENT) mkdir -p "../../assets/exercise4/shaders"
	$(SILENT) "../../third_party/shaderc/linux-x86_64/glslc" -O  -o "../../assets/exercise4/shaders/shaderTexAlpha.frag.spv" "shaderTexAlpha.frag"